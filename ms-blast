#!/bin/sh -e

##########################################################################
#   Description:
#       BLAST a Danio gene against other transcriptomes/genomes
#       
#   History:
#   Date        Name        Modification
#   2022-04-15  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0 gene-name BLAST-database-name\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ 0$1 = 0--help ]; then
    usage
fi

if [ $# = 2 ]; then
    gene=$1
    db=$2
else
    printf "Gene name? "
    read gene
    cd BLAST-DB
    ls *.ndb | cut -d . -f -1
    cd ..
    printf "Database? "
    read db
fi

# Debug
# export PATH=~/Prog/Src/local/bin:$PATH

mkdir -p Fasta
gene_fa=Fasta/$gene.fa
cds=Fasta/$gene-CDS.fa
if [ ! -e $gene_fa ]; then
    printf "Generating $gene_fa...\n"
    blt extract-seq GFF/Danio_rerio.GRCz11.105.chr.gff3 \
	Reference/Danio_rerio.GRCz11.dna.toplevel.fa.xz gene "Name=$gene;" \
	> $gene_fa
    rm -f $cds
fi
if [ ! -e $cds ]; then
    fgrep -w -A 1 CDS $gene_fa > $cds
fi
printf "Coding sequences in $cds.\n"

# -task megablast (default) = hightly similar
# -task dc-megablast = discontinguous megablast (pretty similar_
# -task blastn = somewhat similar
# evalue < 0.01 considered good enough for homology
# https://www.metagenomics.wiki/tools/blast/evalue
# https://www.metagenomics.wiki/tools/blast/blastn-output-format-6
mkdir -p BLAST-output
case ${db##*-} in
transcriptome)
    blastn -task blastn -db BLAST-DB/$db \
	-query $cds -evalue 0.01 \
	-outfmt "6 qseqid pident length evalue stitle" \
	> BLAST-output/$gene-transcriptome.out 2> BLAST-output/$gene-transcriptome.err
    printf "%-15s %10s %10s %10s %-25s %s\n" \
	"Query" "Identity" "Length" "E-value" "Location" "Gene"
    awk -f blast-filter.awk BLAST-output/$gene-transcriptome.out
    ;;

genome)
    if [ -e BLAST-output/$gene-genome.out ]; then
	printf "$gene-genome.out already exists.  Rerun BLAST search? y/[n] "
	read run
    else
	run=y
    fi
    if [ 0$run = 0y ]; then
	# More than 2 threads backfires due to I/O
	time blastn -task dc-megablast -db BLAST-DB/$db \
	    -query $cds -evalue 0.01 \
	    -outfmt "6 qseqid pident length evalue stitle" \
	    -num_threads 2 \
	    > BLAST-output/$gene-genome.out
    fi
    # blast-filter.awk will attempt to print gene name from $10 as
    # well, but it will just be blank
    printf "%-15s %10s %10s %10s %-25s\n" \
	"Query" "Identity" "Length" "E-value" "Location"
    awk -f blast-filter.awk BLAST-output/$gene-genome.out
    ;;

*)
    usage
    ;;

esac
